import os
from multiprocessing import Pool,Manager
def copyFileTask(name, oldFolderName, newFolderName, queue):
   "完成copy一个文件的功能"
   fr = open(oldFolderName+"/"+name)
   fw = open(newFolderName+"/"+name, "w")


   content = fr.read()
   fw.write(content)

   fr.close()
   fw.close()

   queue.put(name)


def main():


    #0.获取永远要copy的文件夹名字
    oldFolderName = input("请输入文件夹的名字:")

    #1.创建一个文件夹
    newFoldName = oldFolderName+"-附件"
    os.mkdir(newFoldName)

    #2.获取old文件夹中的所以文件名字

    fileNames = os.listdir(oldFolderName)
    #print(fileNames)

    #3.使用多进程的方式copy 原文件夹中的所有文件到新的02_私有化文件夹中

    pool = Pool(5)
    queue = Manager().Queue()


    for name in fileNames:
        pool.apply_async(copyFileTask, args=(name,oldFolderName, newFoldName, queue))
    #定义
    allNum = len(fileNames)
    num = 0
    while num<allNum:

        queue.get()
        num += 1
        copyRate = num/allNum
        print("\recopy的进度斯:%.2f"%copyRate,end="")
        
    print("\n已完成C O P Y....")




if __name__ == "__main__":
    main()
